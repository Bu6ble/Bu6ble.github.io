<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>安装教程</title>
    <url>/HEXO/%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/HEXO%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<p>HEXO+NODEJS</p>
<h2 id="关于NVM安装Node-js问题"><a href="#关于NVM安装Node-js问题" class="headerlink" title="关于NVM安装Node.js问题"></a>关于NVM安装Node.js问题</h2><h3 id="‘node’不是内部或外部命令，也不是可运行的程序或批处理文件"><a href="#‘node’不是内部或外部命令，也不是可运行的程序或批处理文件" class="headerlink" title="‘node’不是内部或外部命令，也不是可运行的程序或批处理文件"></a>‘node’不是内部或外部命令，也不是可运行的程序或批处理文件</h3><p>安装了nvm，但是输入node -v显示如下</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="C:\Users\yuanqi\AppData\Roaming\Typora\typora-user-images\image-20240814150345364.png"
                      alt="image-20240814150345364"
                ></p>
<p>解决方案：</p>
<p><strong>卸载重装</strong>。查了教程，有所最好卸载之前用nvm所有安装的node版本，我只安装了一个，所以没进行这样的操作。</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvm uninstall v18.19.0   // 这里根据所需输入版本号</span><br></pre></td></tr></table></figure></div>

<p>接着，可以进行重装。</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvm install v18.19.0   // 这里根据所需输入版本号</span><br><span class="line">nvm use v18.19.0	   // 使用</span><br></pre></td></tr></table></figure></div>



<h2 id="关于镜像问题"><a href="#关于镜像问题" class="headerlink" title="关于镜像问题"></a>关于镜像问题</h2><h3 id="问题1：使用nvm-ls-available-命令无可供下载的版本"><a href="#问题1：使用nvm-ls-available-命令无可供下载的版本" class="headerlink" title="问题1：使用nvm ls available 命令无可供下载的版本"></a>问题1：使用nvm ls available 命令无可供下载的版本</h3><p>想要安装NVM，有可能遇到一个bug，使用 nvm ls available 命令进行查看可供下载的版本，但是输出的表格为空。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="C:\Users\yuanqi\AppData\Roaming\Typora\typora-user-images\image-20240815103940625.png"
                      alt="image-20240815103940625"
                ></p>
<h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>对于中国用户而言，可以切换<code>nodejs</code>或<code>npm</code>的镜像地址来访问，即在命令行执行如下命令</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvm node_mirror https://npmmirror.com/mirrors/node/</span><br><span class="line">nvm npm_mirror https://npmmirror.com/mirrors/npm/</span><br></pre></td></tr></table></figure></div>

<p>再次运行<code>nvm ls available</code> ，已经可以完整展示可供下载的版本了：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="C:\Users\yuanqi\AppData\Roaming\Typora\typora-user-images\image-20240815104142621.png"
                      alt="image-20240815104142621"
                ></p>
<h3 id="问题2：使用npm-install时，显示ETIMEDOUT"><a href="#问题2：使用npm-install时，显示ETIMEDOUT" class="headerlink" title="问题2：使用npm install时，显示ETIMEDOUT"></a>问题2：使用npm install时，显示ETIMEDOUT</h3><p>访问<code>https://registry.npmjs.org</code>这个地址需要翻墙才能访问，所以在国内经常会出现连接超时等问题。为了解决这个问题，可以将npm的源设置为国内的镜像例如淘宝镜像。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="C:\Users\yuanqi\AppData\Roaming\Typora\typora-user-images\image-20240814142612039.png"
                      alt="image-20240814142612039"
                ></p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">//将npm设置为淘宝镜像</span><br><span class="line">npm config set registry https://registry.npmmirror.com</span><br><span class="line"></span><br><span class="line">//输入上述命令后，npm就会将镜像源设置为淘宝镜像，可以一下命令来验证即查看npm镜像设置</span><br><span class="line">npm config get registry</span><br><span class="line">//如果输出结果为 https://registry.npmmirror.com/，则说明已经成功设置镜像源</span><br><span class="line"></span><br><span class="line">//尝试重新执行，应该就能够成功安装了</span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line">//另外，如果不想全局设置 npm 的镜像源，也可以在执行 npm install 命令时指定镜像源，例如：</span><br><span class="line">npm install --registry=https://registry.npmmirror.com</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="C:\Users\yuanqi\AppData\Roaming\Typora\typora-user-images\image-20240814143744955.png"
                      alt="image-20240814143744955"
                ></p>
<h4 id=""><a href="#" class="headerlink" title=""></a></h4><h2 id="关于NVM使用小技巧"><a href="#关于NVM使用小技巧" class="headerlink" title="关于NVM使用小技巧"></a>关于NVM使用小技巧</h2><h3 id="使用nrm管理npm源"><a href="#使用nrm管理npm源" class="headerlink" title="使用nrm管理npm源"></a>使用nrm管理npm源</h3><p>针对需要在不同的网络环境之间切换时，允许在不同的 npm 源之间进行切换，以加快包的下载速度，或者解决特定源无法访问的问题。</p>
<p>nrm 提供了一组命令，可以列出可用的 npm 源、添加新源、测试源的响应速度，并切换当前使用的源。</p>
<p>安装命令：</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g nrm</span><br></pre></td></tr></table></figure></div>

<p>一些nrm命令：</p>
<ul>
<li><p>列出可用的源：当前配置的所有可用 npm 源以及它们的名称和 URL。</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nrm ls</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="C:\Users\yuanqi\AppData\Roaming\Typora\typora-user-images\image-20240815105424191.png"
                      alt="image-20240815105424191"
                ></p>
</li>
<li><p>切换源：将当前的 npm 源切换为指定的源。可用npm源的名称或 URL 作为参数。</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nrm use &lt;registry&gt;</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>添加源：添加一个新的 npm 源并指定其名称和 URL。</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nrm add &lt;registry&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>删除源：删除指定的 npm 源，需要提供源的名称或 URL 作为参数。</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nrm del &lt;registry&gt;</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>测试源的速度：测试指定源的响应速度，并显示测试结果。</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nrm test &lt;registry&gt;</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>显示当前使用的源：当前正在使用的 npm 源的名称和 URL。</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nrm current</span><br></pre></td></tr></table></figure></div></li>
</ul>
<h3 id="使用nvm安装node版本"><a href="#使用nvm安装node版本" class="headerlink" title="使用nvm安装node版本"></a>使用nvm安装node版本</h3><ul>
<li>查询可插入版本号，LST表示可插入的稳定版本</li>
</ul>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvm list available</span><br></pre></td></tr></table></figure></div>

<ul>
<li>指定安装版本</li>
</ul>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvm install &lt;version&gt;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>切换到所需版本</li>
</ul>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvm use &lt;version&gt;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>查看当前node和npm版本信息</li>
</ul>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure></div>

<ul>
<li>查看已安装版本</li>
</ul>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvm list</span><br></pre></td></tr></table></figure></div>

<ul>
<li>删除某个版本</li>
</ul>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvm uninstall &lt;version&gt;</span><br></pre></td></tr></table></figure></div>



<h2 id="关于hexo使用主题报错问题"><a href="#关于hexo使用主题报错问题" class="headerlink" title="关于hexo使用主题报错问题"></a>关于hexo使用主题报错问题</h2><h3 id="版本不匹配"><a href="#版本不匹配" class="headerlink" title="版本不匹配"></a>版本不匹配</h3><p>一定要注意hexo的版本和Node.js版本的匹配</p>
<p>不匹配的话，报的错误都不知道怎么解决…</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="C:\Users\yuanqi\AppData\Roaming\Typora\typora-user-images\image-20240814144016012.png"
                      alt="image-20240814144016012"
                ></p>
<h3 id="安装后本地可以运行，但是推送到GIT上JS-CSS失效，状态码报404"><a href="#安装后本地可以运行，但是推送到GIT上JS-CSS失效，状态码报404" class="headerlink" title="安装后本地可以运行，但是推送到GIT上JS&#x2F;CSS失效，状态码报404"></a>安装后本地可以运行，但是推送到GIT上JS&#x2F;CSS失效，状态码报404</h3><p><code>_config.yml</code>中的url根据样例，添加了一个project，但是如果在根路径下创建的，所以样式和js会404。<br>解决方案：修改<code>_config.yml</code>中的url。</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"># URL</span><br><span class="line">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span><br><span class="line">url: https://你的github账户名.github.io</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure></div>



<h3 id="使用主题显示“warning-LF-will-be-replaced-by-CRLF”"><a href="#使用主题显示“warning-LF-will-be-replaced-by-CRLF”" class="headerlink" title="使用主题显示“warning: LF will be replaced by CRLF”"></a>使用主题显示“warning: LF will be replaced by CRLF”</h3><p>windows中的换行符为 CRLF，而在Linux下的换行符为LF，所以在执行add . 时出现提示。</p>
<p>CRLF和LF是两种不同的换行格式，git工作区默认为CRLF来作为换行符，所以当项目文件里有用的地方使用LF作为换行符，这个时候再继续git add或者git commit的时候就会弹出警告，当最终push到远程仓库的时候git会统一格式全部转化为用CRLF作为换行符。</p>
<p>只是一个警告信息，忽略就可以了。</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 以下任选其一禁用自动转换 </span><br><span class="line">// 关闭自动转换（当前仓库）</span><br><span class="line">git config core.autocrlf false</span><br><span class="line">// 关闭自动转换（全局仓库）</span><br><span class="line">git config --global core.autocrlf false </span><br><span class="line">// 检查git的设置结果</span><br><span class="line">git config core.autocrlf</span><br></pre></td></tr></table></figure></div>

<p>参考链接</p>
<ol>
<li><a class="link"   href="https://www.cnblogs.com/Fooo/p/17864023.html" >安装NVM之后，NODE -V 提示‘NODE‘ 不是内部或外部命令，也不是可运行的程序 或批处理文件<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></li>
<li>使用github pages和hexo搭建个人博客并绑定域名[<a class="link"   href="https://blog.csdn.net/weixin_44826970/article/details/120044020]" >https://blog.csdn.net/weixin_44826970/article/details/120044020]<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></li>
<li>Git提示“warning: LF will be replaced by CRLF”最详细解释+解决方案[<a class="link"   href="https://zhuanlan.zhihu.com/p/586324681]" >https://zhuanlan.zhihu.com/p/586324681]<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></li>
</ol>
]]></content>
      <categories>
        <category>HEXO</category>
        <category>使用教程</category>
      </categories>
      <tags>
        <tag>environment</tag>
      </tags>
  </entry>
  <entry>
    <title>HEXO使用指南</title>
    <url>/HEXO/%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/HEXO%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>Hexo 是一个快速、简洁且高效的博客框架。 </p>
<p>Hexo 使用Markdown（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<p>欢迎使用 Hexo，本文档将帮助您快速上手：<a class="link"   href="https://hexo.io/zh-cn/docs/index.html" >https://hexo.io/zh-cn/docs/index.html<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<p> 仅以此文记录一些在使用期间需要用到的内容。</p>
<h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h2 id="初始创建用法"><a href="#初始创建用法" class="headerlink" title="初始创建用法"></a>初始创建用法</h2><h3 id="创建分类"><a href="#创建分类" class="headerlink" title="创建分类"></a>创建分类</h3><ul>
<li>打开命令行，进入博客所在文件夹的<strong>根目录</strong>，执行下述命令。</li>
</ul>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure></div>

<ul>
<li>在<code>source/categories</code>下找到<code>index.md</code>文件，可得到内容如下。</li>
</ul>
<div class="code-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2024-12-03 22:53:43</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>修改内容如下。</li>
</ul>
<div class="code-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">分类（可自定义）</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2024-12-03 22:53:43</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">categories</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>打开需要分类的文章，在文章开头添加<code>Front Matter</code>格式。<ul>
<li>这里要注意，一篇文章只能属于一个分类</li>
<li>如果需要分类嵌套，则继续添加“-xxx”。如下所示，为该文章属于“HEXO”下的“使用教程”分类</li>
</ul>
</li>
</ul>
<div class="code-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">HEXO使用指南</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2024-12-05 21:54:35</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">HEXO</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">使用教程</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>根据上述操作则给文章添加分类，点击首页的“分类”可以看到该分类下的所有文章。</li>
<li>只有添加了<code>categories: xxx</code>的文章才会被收录到首页的“分类”中。</li>
</ul>
<h3 id="创建标签"><a href="#创建标签" class="headerlink" title="创建标签"></a>创建标签</h3><ul>
<li>打开命令行，进入博客所在文件夹的<strong>根目录</strong>，执行下述命令。</li>
</ul>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure></div>

<ul>
<li>在<code>source/categories</code>下找到<code>index.md</code>文件，可得到内容如下。</li>
</ul>
<div class="code-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2024-12-03 22:53:43</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>修改内容如下。</li>
</ul>
<div class="code-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">标签（可自定义）</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2024-12-03 22:53:43</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">categories</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>打开需要加标签的文章，在文章开头添加<code>Front Matter</code>格式。<ul>
<li>这里要注意，一篇文章只能属于一个分类</li>
<li>如果需要分类嵌套，则继续添加“-xxx”。如下所示，为该文章属于“HEXO”下的“使用教程”分类</li>
</ul>
</li>
</ul>
<div class="code-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">HEXO使用指南</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2024-12-05 21:54:35</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">HEXO</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">使用教程</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">environment</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>根据上述操作则给文章添加标签，点击首页的“标签”可以看到该标签下的所有文章。</li>
<li>只有添加了<code>tags: xxx</code>的文章才会被收录到首页的“标签”中。</li>
</ul>
]]></content>
      <categories>
        <category>HEXO</category>
        <category>使用教程</category>
      </categories>
      <tags>
        <tag>environment</tag>
      </tags>
  </entry>
  <entry>
    <title>深度学习概论</title>
    <url>/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%90%B4%E6%81%A9%E8%BE%BE%E3%80%8A%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%B8%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%AE%BA/</url>
    <content><![CDATA[<h1 id="神经网络"><a href="#神经网络" class="headerlink" title="神经网络"></a>神经网络</h1><h2 id="什么是神经网络"><a href="#什么是神经网络" class="headerlink" title="什么是神经网络"></a>什么是神经网络</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://cdn.jsdelivr.net/gh/Bu6ble/Pictures@main/img/2d52e7542bc42c19a95cdbfc9c6bfd22.png"
                      alt="img"
                ></p>
<ul>
<li>以下为一个简单的神经网络概述，将房屋的面积作为神经网络的输入（我们称之为x），通过一个节点（一个小圆圈），最终输出了价格（用y表示）。其实这个小圆圈就是一个单独的神经元。接着网络实现了这个函数的功能。</li>
<li>从趋近于零开始，到变成一条直线。这个函数被称作<strong>ReLU激活函数</strong>，它的全称是Rectified Linear Unit。rectify（修正）可以理解成max(0,x)，这也是得到一个这种形状的函数的原因。</li>
</ul>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://cdn.jsdelivr.net/gh/Bu6ble/Pictures@main/img/image-20241208210847590.png"
                      alt="image-20241208210847590"
                ></p>
<ul>
<li>不仅仅用房屋的面积来预测它的价格，现在有了一些有关房屋的其它特征，比如卧室的数量、一家人的数量也会影响房屋价格。</li>
<li>邮政编码或许能作为一个特征，告诉你步行化程度。比如这附近是不是高度步行化，你是否能步行去杂货店或者是学校，以及你是否需要驾驶汽车。有些人喜欢居住在以步行为主的区域，另外根据邮政编码还和富裕程度相关或体现出附近学校的水平有多好。</li>
<li>在图上每一个画的小圆圈都可以是<strong>ReLU</strong>的一部分，也就是指修正线性单元，或者其它稍微非线性的函数。基于房屋面积和卧室数量，可以估算家庭人口；基于邮编，可以估测步行化程度或者学校的质量。这些决定人们乐意花费多少钱。</li>
</ul>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://cdn.jsdelivr.net/gh/Bu6ble/Pictures@main/img/image-20241208213813019.png"
                      alt="image-20241208213813019"
                ></p>
<ul>
<li>对于一个房子来说，家庭人口、步行化程度以及学校的质量都能帮助你预测房屋的价格。以此为例，x是所有的这四个输入，y是你尝试预测的价格，把这些单个的神经元叠加在一起，就有了一个稍微大一点的神经网络。</li>
<li>神经网络的一部分神奇之处在于，当你实现它之后，你要做的只是输入x，就能得到输出 y。因为它可以自己计算你训练集中样本的数目以及所有的中间过程。同时也注意到这些被叫做隐藏单元圆圈，在一个神经网络中，它们每个都从输入的四个特征获得自身输入，比如说，第一个结点代表家庭人口，而家庭人口仅仅取决于x1和x2特征。</li>
<li>换句话说，在神经网络中，你决定在这个结点中想要得到什么，然后用所有的四个输入来计算想要得到的。因此，我们说输入层和中间层被紧密的连接起来了。</li>
</ul>
<h2 id="用神经网络进行监督学习"><a href="#用神经网络进行监督学习" class="headerlink" title="用神经网络进行监督学习"></a>用神经网络进行监督学习</h2><ul>
<li><p>对于图像应用，我们经常在神经网络上使用卷积（<strong>Convolutional Neural Network</strong>），通常缩写为<strong>CNN</strong>。</p>
</li>
<li><p>对于序列数据，经常使用<strong>RNN</strong>，一种递归神经网络（<strong>Recurrent Neural Network</strong>），语言，英语和汉语字母表或单词都是逐个出现的，所以语言也是最自然的序列数据，因此更复杂的<strong>RNNs</strong>版本经常用于这些应用。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://cdn.jsdelivr.net/gh/Bu6ble/Pictures@main/img/image-20241209193508722.png"
                      alt="image-20241209193508722"
                ></p>
</li>
<li><p>对于结构化数据和非结构化数据</p>
<ul>
<li>结构化数据意思是每个特征，比如说房屋大小卧室数量，或者是一个用户的年龄，都有一个很好的定义。</li>
<li>非结构化数据是指比如原始音频或者你想要识别的图像或文本中的内容，特征可能是图像中的像素值或文本中的单个单词。</li>
</ul>
</li>
</ul>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://cdn.jsdelivr.net/gh/Bu6ble/Pictures@main/img/image-20241209193638681.png"
                      alt="image-20241209193638681"
                ></p>
<ul>
<li>【如红线所示】为传统机器学习算法的性能。作为数据量的一个函数，你可能得到一个弯曲的线，就像图中这样，它的性能一开始在增加更多数据时会上升，但是一段变化后它的性能就会像一个高原一样。假设你的水平轴拉的很长很长，它们不知道如何处理规模巨大的数据。</li>
<li>而过去十年的社会里，我们遇到的很多问题只有相对较少的数据量。随着数字化时代的到来，我们便收集到了大量的数据，远超过机器学习算法能够高效发挥它们优势的规模。</li>
<li>【如黄线所示】如果训练一个小型的神经网络，那么这个性能可能会像下图黄色曲线表示那样。</li>
<li>【如蓝线所示】如果训练一个稍微大一点的神经网络，比如说一个中等规模的神经网络，它在某些数据上面的性能也会更好一些。</li>
<li>【如绿线所示】如果你训练一个非常大的神经网络，它就会变成下图绿色曲线那样，并且保持变得越来越好。</li>
<li>综上所述，如果想要获得较高的性能体现，那么有两个条件要完成，第一个是需要训练一个规模足够大的神经网络，以发挥数据规模量巨大的优点，其次是需要能画到x轴的这个位置，所以需要很多的数据。</li>
<li>如今最可靠的方法来在神经网络上获得更好的性能，往往就是<strong>要么训练一个更大的神经网络，要么投入更多的数据</strong>。</li>
</ul>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://cdn.jsdelivr.net/gh/Bu6ble/Pictures@main/img/image-20241209194443467.png"
                      alt="image-20241209194443467"
                ></p>
<ul>
<li><p>在这个小的训练集中，各种算法的优先级事实上定义并不明确，所以如果你没有大量的训练集，那效果会取决于你的特征工程能力，那将决定最终的性能。</p>
</li>
<li><p>神经网络方面的一个巨大突破是从<strong>sigmoid</strong>函数转换到一个<strong>ReLU</strong>函数。</p>
</li>
<li><p>使用<strong>sigmoid</strong>函数的问题是，在这个区域，<strong>sigmoid</strong>函数的梯度会接近零，所以学习的速度会变得非常缓慢，因为当你实现梯度下降以及梯度接近零的时候，参数会更新的很慢，所以学习的速率也会变得很慢。</p>
</li>
<li><p>而通过改变这个被叫做激活函数的东西，神经网络换用这一个函数，叫做<strong>ReLU</strong>的函数（修正线性单元），<strong>ReLU</strong>它的梯度对于所有输入的负值都是零，因此梯度更加不会趋向逐渐减少到零。</p>
</li>
<li><p>从左图可以看出来，在正值区域，sigmoid函数的斜率趋近于0，而ReLU函数的斜率为正值，仅仅通过将<strong>sigmoid</strong>函数转换成<strong>ReLU</strong>函数，便能够使得一个叫做梯度下降（<strong>gradient descent</strong>）的算法运行的更快。</p>
</li>
</ul>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://cdn.jsdelivr.net/gh/Bu6ble/Pictures@main/img/image-20241209195354125.png"
                      alt="image-20241209195354125"
                ></p>
]]></content>
      <categories>
        <category>深度学习</category>
        <category>吴恩达《神经网络与深度学习》</category>
      </categories>
      <tags>
        <tag>deep learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/uncategorized/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
]]></content>
  </entry>
</search>
