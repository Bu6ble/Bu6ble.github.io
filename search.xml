<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>安装教程</title>
    <url>/HEXO/%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/HEXO%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<p>HEXO+NODEJS</p>
<h2 id="关于NVM安装Node-js问题"><a href="#关于NVM安装Node-js问题" class="headerlink" title="关于NVM安装Node.js问题"></a>关于NVM安装Node.js问题</h2><h3 id="‘node’不是内部或外部命令，也不是可运行的程序或批处理文件"><a href="#‘node’不是内部或外部命令，也不是可运行的程序或批处理文件" class="headerlink" title="‘node’不是内部或外部命令，也不是可运行的程序或批处理文件"></a>‘node’不是内部或外部命令，也不是可运行的程序或批处理文件</h3><p>安装了nvm，但是输入node -v显示如下</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="C:\Users\yuanqi\AppData\Roaming\Typora\typora-user-images\image-20240814150345364.png"
                      alt="image-20240814150345364"
                ></p>
<p>解决方案：</p>
<p><strong>卸载重装</strong>。查了教程，有所最好卸载之前用nvm所有安装的node版本，我只安装了一个，所以没进行这样的操作。</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvm uninstall v18.19.0   // 这里根据所需输入版本号</span><br></pre></td></tr></table></figure></div>

<p>接着，可以进行重装。</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvm install v18.19.0   // 这里根据所需输入版本号</span><br><span class="line">nvm use v18.19.0	   // 使用</span><br></pre></td></tr></table></figure></div>



<h2 id="关于镜像问题"><a href="#关于镜像问题" class="headerlink" title="关于镜像问题"></a>关于镜像问题</h2><h3 id="问题1：使用nvm-ls-available-命令无可供下载的版本"><a href="#问题1：使用nvm-ls-available-命令无可供下载的版本" class="headerlink" title="问题1：使用nvm ls available 命令无可供下载的版本"></a>问题1：使用nvm ls available 命令无可供下载的版本</h3><p>想要安装NVM，有可能遇到一个bug，使用 nvm ls available 命令进行查看可供下载的版本，但是输出的表格为空。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="C:\Users\yuanqi\AppData\Roaming\Typora\typora-user-images\image-20240815103940625.png"
                      alt="image-20240815103940625"
                ></p>
<h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>对于中国用户而言，可以切换<code>nodejs</code>或<code>npm</code>的镜像地址来访问，即在命令行执行如下命令</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvm node_mirror https://npmmirror.com/mirrors/node/</span><br><span class="line">nvm npm_mirror https://npmmirror.com/mirrors/npm/</span><br></pre></td></tr></table></figure></div>

<p>再次运行<code>nvm ls available</code> ，已经可以完整展示可供下载的版本了：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="C:\Users\yuanqi\AppData\Roaming\Typora\typora-user-images\image-20240815104142621.png"
                      alt="image-20240815104142621"
                ></p>
<h3 id="问题2：使用npm-install时，显示ETIMEDOUT"><a href="#问题2：使用npm-install时，显示ETIMEDOUT" class="headerlink" title="问题2：使用npm install时，显示ETIMEDOUT"></a>问题2：使用npm install时，显示ETIMEDOUT</h3><p>访问<code>https://registry.npmjs.org</code>这个地址需要翻墙才能访问，所以在国内经常会出现连接超时等问题。为了解决这个问题，可以将npm的源设置为国内的镜像例如淘宝镜像。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="C:\Users\yuanqi\AppData\Roaming\Typora\typora-user-images\image-20240814142612039.png"
                      alt="image-20240814142612039"
                ></p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">//将npm设置为淘宝镜像</span><br><span class="line">npm config set registry https://registry.npmmirror.com</span><br><span class="line"></span><br><span class="line">//输入上述命令后，npm就会将镜像源设置为淘宝镜像，可以一下命令来验证即查看npm镜像设置</span><br><span class="line">npm config get registry</span><br><span class="line">//如果输出结果为 https://registry.npmmirror.com/，则说明已经成功设置镜像源</span><br><span class="line"></span><br><span class="line">//尝试重新执行，应该就能够成功安装了</span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line">//另外，如果不想全局设置 npm 的镜像源，也可以在执行 npm install 命令时指定镜像源，例如：</span><br><span class="line">npm install --registry=https://registry.npmmirror.com</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="C:\Users\yuanqi\AppData\Roaming\Typora\typora-user-images\image-20240814143744955.png"
                      alt="image-20240814143744955"
                ></p>
<h4 id=""><a href="#" class="headerlink" title=""></a></h4><h2 id="关于NVM使用小技巧"><a href="#关于NVM使用小技巧" class="headerlink" title="关于NVM使用小技巧"></a>关于NVM使用小技巧</h2><h3 id="使用nrm管理npm源"><a href="#使用nrm管理npm源" class="headerlink" title="使用nrm管理npm源"></a>使用nrm管理npm源</h3><p>针对需要在不同的网络环境之间切换时，允许在不同的 npm 源之间进行切换，以加快包的下载速度，或者解决特定源无法访问的问题。</p>
<p>nrm 提供了一组命令，可以列出可用的 npm 源、添加新源、测试源的响应速度，并切换当前使用的源。</p>
<p>安装命令：</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g nrm</span><br></pre></td></tr></table></figure></div>

<p>一些nrm命令：</p>
<ul>
<li><p>列出可用的源：当前配置的所有可用 npm 源以及它们的名称和 URL。</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nrm ls</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="C:\Users\yuanqi\AppData\Roaming\Typora\typora-user-images\image-20240815105424191.png"
                      alt="image-20240815105424191"
                ></p>
</li>
<li><p>切换源：将当前的 npm 源切换为指定的源。可用npm源的名称或 URL 作为参数。</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nrm use &lt;registry&gt;</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>添加源：添加一个新的 npm 源并指定其名称和 URL。</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nrm add &lt;registry&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>删除源：删除指定的 npm 源，需要提供源的名称或 URL 作为参数。</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nrm del &lt;registry&gt;</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>测试源的速度：测试指定源的响应速度，并显示测试结果。</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nrm test &lt;registry&gt;</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>显示当前使用的源：当前正在使用的 npm 源的名称和 URL。</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nrm current</span><br></pre></td></tr></table></figure></div></li>
</ul>
<h3 id="使用nvm安装node版本"><a href="#使用nvm安装node版本" class="headerlink" title="使用nvm安装node版本"></a>使用nvm安装node版本</h3><ul>
<li>查询可插入版本号，LST表示可插入的稳定版本</li>
</ul>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvm list available</span><br></pre></td></tr></table></figure></div>

<ul>
<li>指定安装版本</li>
</ul>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvm install &lt;version&gt;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>切换到所需版本</li>
</ul>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvm use &lt;version&gt;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>查看当前node和npm版本信息</li>
</ul>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure></div>

<ul>
<li>查看已安装版本</li>
</ul>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvm list</span><br></pre></td></tr></table></figure></div>

<ul>
<li>删除某个版本</li>
</ul>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvm uninstall &lt;version&gt;</span><br></pre></td></tr></table></figure></div>



<h2 id="关于hexo使用主题报错问题"><a href="#关于hexo使用主题报错问题" class="headerlink" title="关于hexo使用主题报错问题"></a>关于hexo使用主题报错问题</h2><h3 id="版本不匹配"><a href="#版本不匹配" class="headerlink" title="版本不匹配"></a>版本不匹配</h3><p>一定要注意hexo的版本和Node.js版本的匹配</p>
<p>不匹配的话，报的错误都不知道怎么解决…</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="C:\Users\yuanqi\AppData\Roaming\Typora\typora-user-images\image-20240814144016012.png"
                      alt="image-20240814144016012"
                ></p>
<h3 id="安装后本地可以运行，但是推送到GIT上JS-CSS失效，状态码报404"><a href="#安装后本地可以运行，但是推送到GIT上JS-CSS失效，状态码报404" class="headerlink" title="安装后本地可以运行，但是推送到GIT上JS&#x2F;CSS失效，状态码报404"></a>安装后本地可以运行，但是推送到GIT上JS&#x2F;CSS失效，状态码报404</h3><p><code>_config.yml</code>中的url根据样例，添加了一个project，但是如果在根路径下创建的，所以样式和js会404。<br>解决方案：修改<code>_config.yml</code>中的url。</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"># URL</span><br><span class="line">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span><br><span class="line">url: https://你的github账户名.github.io</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure></div>



<h3 id="使用主题显示“warning-LF-will-be-replaced-by-CRLF”"><a href="#使用主题显示“warning-LF-will-be-replaced-by-CRLF”" class="headerlink" title="使用主题显示“warning: LF will be replaced by CRLF”"></a>使用主题显示“warning: LF will be replaced by CRLF”</h3><p>windows中的换行符为 CRLF，而在Linux下的换行符为LF，所以在执行add . 时出现提示。</p>
<p>CRLF和LF是两种不同的换行格式，git工作区默认为CRLF来作为换行符，所以当项目文件里有用的地方使用LF作为换行符，这个时候再继续git add或者git commit的时候就会弹出警告，当最终push到远程仓库的时候git会统一格式全部转化为用CRLF作为换行符。</p>
<p>只是一个警告信息，忽略就可以了。</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 以下任选其一禁用自动转换 </span><br><span class="line">// 关闭自动转换（当前仓库）</span><br><span class="line">git config core.autocrlf false</span><br><span class="line">// 关闭自动转换（全局仓库）</span><br><span class="line">git config --global core.autocrlf false </span><br><span class="line">// 检查git的设置结果</span><br><span class="line">git config core.autocrlf</span><br></pre></td></tr></table></figure></div>

<p>参考链接</p>
<ol>
<li><a class="link"   href="https://www.cnblogs.com/Fooo/p/17864023.html" >安装NVM之后，NODE -V 提示‘NODE‘ 不是内部或外部命令，也不是可运行的程序 或批处理文件<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></li>
<li>使用github pages和hexo搭建个人博客并绑定域名[<a class="link"   href="https://blog.csdn.net/weixin_44826970/article/details/120044020]" >https://blog.csdn.net/weixin_44826970/article/details/120044020]<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></li>
<li>Git提示“warning: LF will be replaced by CRLF”最详细解释+解决方案[<a class="link"   href="https://zhuanlan.zhihu.com/p/586324681]" >https://zhuanlan.zhihu.com/p/586324681]<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></li>
</ol>
]]></content>
      <categories>
        <category>HEXO</category>
        <category>使用教程</category>
      </categories>
      <tags>
        <tag>environment</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/uncategorized/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
]]></content>
  </entry>
</search>
